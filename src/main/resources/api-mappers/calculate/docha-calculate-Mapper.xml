<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ohdocha.admin.mapper.DochaAdminCalculateMapper">


	<select id="selectCalculateInfoList" parameterType="calculateRequest" resultType="calculateResponse">
		<![CDATA[
            SELECT *
         FROM  (
                SELECT ROWNUM AS ROW_NUMBER, COUNT(*) OVER() TOTAL_ROW_COUNT
                           , A.*
                FROM
                (
                          SELECT NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6) AS ACCOUNT_EXP_DT                                                            /* 정산일 */
                          ,      SUM(T1.PAYMENT_AMOUNT) AS TOTAL_FEE                                                                                 /* 총결제금액 */
                          --,      IFNULL(T1.RM_IDX  , ''  ) AS RM_IDX
                          ,      COUNT(DISTINCT T1.RT_IDX) AS COMPANY_COUNT                                                                           /* 회원사CNT */
                            ,      COUNT(DISTINCT T1.RM_IDX) AS RM_COUNT                                                                              /* 예약건CNT */
                          ,      SUM(IFNULL((T1.PAYMENT_AMOUNT*DECODE(T4.COMMISSION_PER, 0,NULL, T4.COMMISSION_PER)/100), 0)) AS DOCHA_DIS_FEE                           /* 두차수수료 */
                          ,      SUM(IFNULL((T1.PAYMENT_AMOUNT ), 0) - IFNULL((T1.PAYMENT_AMOUNT*DECODE(T4.COMMISSION_PER, 0,NULL, T4.COMMISSION_PER)/100), 0)) AS ACCOUNT_EXP_AMT    /* 정산예정금 */
                          ,      SUM(IFNULL(T5.AC_PAY,0)) AS SUCCESS_AMOUNT                                                                              /* 정산완료금 */
                          ,      SUM(IFNULL(T1.PAYMENT_AMOUNT,0)-IFNULL(T1.DISCOUNT_FEE,0)) AS TOTAL_AMOUNT                                                         /* 총금액 */
                          ,      SUM(IFNULL(T1.DISCOUNT_FEE,0)) AS DISCOUNT_FEE                                                                               /* 할인금액 */
                            ,      SUM(IFNULL(((T1.PAYMENT_AMOUNT ) - IFNULL((T1.PAYMENT_AMOUNT*DECODE(T4.COMMISSION_PER, 0,NULL, T4.COMMISSION_PER)/100), 0)) - (IFNULL(T5.AC_PAY,0)),0)) AS ONMISS_FEE /* 미정산금액 */
                       FROM   (
                                SELECT
                                    PD.PAYMENT_AMOUNT
                                    , PD.PD_IDX
                                    , RM.RT_IDX
                                    , RM.RM_IDX
                                    , RM.DISCOUNT_FEE
                                    , CASE
                                        WHEN TO_DATE(TO_CHAR(PD.PAYMENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') > TO_DATE(RM.RENT_START_DAY, 'YYYY-MM-DD') THEN TO_DATE(TO_CHAR(PD.PAYMENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
                                        ELSE TO_DATE(RM.RENT_START_DAY, 'YYYY-MM-DD')
                                      END AS ACCOUNT_EXP_BASE_DT
                                  FROM DC_PAYMENT_DETAIL PD
                                  INNER JOIN DC_RESERVE_MASTER RM
                                  ON PD.RM_IDX = RM.RM_IDX
                            ) T1
                       --LEFT OUTER JOIN DC_RESERVE_MASTER T2 ON T1.RM_IDX = T2.RM_IDX
                       LEFT OUTER JOIN DC_RENT_COMPANY T3 ON T1.RT_IDX = T3.RT_IDX
                       LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION T4 ON T3.RT_IDX = T4.RT_IDX
                          LEFT OUTER JOIN DC_RENT_ACCOUNTS T5 ON T1.PD_IDX = T5.PD_IDX
                          GROUP BY NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6)--, T1.RM_IDX
                          ORDER BY NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6) DESC
                  ) A
                   ]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<choose>
				<when test="searchStartDt != null and searchStartDt != ''and searchEndDt != null and searchEndDt != ''">
					AND A.ACCOUNT_EXP_DT BETWEEN TO_DATE(#{searchStartDt} , 'YYYY-MM-DD') AND TO_DATE(#{searchEndDt} , 'YYYY-MM-DD')
				</when>
				<otherwise>
					<if test="searchStartDt != null and searchStartDt != ''">
						<![CDATA[
                        AND A.ACCOUNT_EXP_DT >= TO_DATE(#{searchStartDt} , 'YYYY-MM-DD')
                        ]]>
					</if>
					<if test="searchEndDt != null and searchEndDt != ''">
						<![CDATA[
                        AND A.ACCOUNT_EXP_DT <= TO_DATE(#{searchEndDt} , 'YYYY-MM-DD')
                        ]]>
					</if>
				</otherwise>
			</choose>
		</trim>
		<![CDATA[
          ) TTB
         WHERE  1=1
         AND
         ROWNUM <= #{displayPageNum} AND ROW_NUMBER > (#{page}-1) * #{displayPageNum}
         ]]>


	</select>

	<select id="selectCalculateDateCompanyList" parameterType="calculateRequest" resultType="calculateResponse">
		<![CDATA[
            SELECT *
         FROM  (
                SELECT ROWNUM AS ROW_NUMBER, COUNT(*) OVER() TOTAL_ROW_COUNT
                           , A.*
                FROM
                (
                   SELECT
                      Z.*
                           , B.COMPANY_NAME
                           , B.BRANCH_NAME
                           , B.COMPANY_REGISTRATION_NAME
                           , B.ACCOUNT_NUMBER
                           --, B.ACCOUNT_BANK
                           , C.CODE_VALUE AS ACCOUNT_BANK
                   FROM
                   (
                          SELECT NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6) AS ACCOUNT_EXP_DT                                                            /* 정산일 */
                          ,      SUM(T1.PAYMENT_AMOUNT) AS TOTAL_FEE                                                                                 /* 총결제금액 */
                          ,      IFNULL(T1.RT_IDX  , ''  ) AS RT_IDX
                          ,      COUNT(DISTINCT T1.RT_IDX) AS COMPANY_COUNT                                                                           /* 회원사CNT */
                            ,      COUNT(DISTINCT T1.RM_IDX) AS RM_COUNT                                                                              /* 예약건CNT */
                          ,      SUM(IFNULL((T1.PAYMENT_AMOUNT*DECODE(T4.COMMISSION_PER, 0,NULL, T4.COMMISSION_PER)/100), 0)) AS DOCHA_DIS_FEE                           /* 두차수수료 */
                          ,      SUM(IFNULL((T1.PAYMENT_AMOUNT ), 0) - IFNULL((T1.PAYMENT_AMOUNT*DECODE(T4.COMMISSION_PER, 0,NULL, T4.COMMISSION_PER)/100), 0)) AS ACCOUNT_EXP_AMT    /* 정산예정금 */
                          ,      SUM(IFNULL(T5.AC_PAY,0)) AS SUCCESS_AMOUNT                                                                              /* 정산완료금 */
                          ,      SUM(IFNULL(T1.PAYMENT_AMOUNT,0)-IFNULL(T1.DISCOUNT_FEE,0)) AS TOTAL_AMOUNT                                                         /* 총금액 */
                          ,      SUM(IFNULL(T1.DISCOUNT_FEE,0)) AS DISCOUNT_FEE                                                                               /* 할인금액 */
                            ,      SUM(IFNULL(((T1.PAYMENT_AMOUNT ) - IFNULL((T1.PAYMENT_AMOUNT*DECODE(T4.COMMISSION_PER, 0,NULL, T4.COMMISSION_PER)/100), 0)) - (IFNULL(T5.AC_PAY,0)),0)) AS ONMISS_FEE /* 미정산금액 */
                       FROM   (
                                   SELECT
                                    PD.PAYMENT_AMOUNT
                                    , PD.PD_IDX
                                    , RM.RT_IDX
                                    , RM.RM_IDX
                                    , RM.DISCOUNT_FEE
                                    , CASE
                                        WHEN TO_DATE(TO_CHAR(PD.PAYMENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') > TO_DATE(RM.RENT_START_DAY, 'YYYY-MM-DD') THEN TO_DATE(TO_CHAR(PD.PAYMENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
                                        ELSE TO_DATE(RM.RENT_START_DAY, 'YYYY-MM-DD')
                                      END AS ACCOUNT_EXP_BASE_DT
                                  FROM DC_PAYMENT_DETAIL PD
                                  INNER JOIN DC_RESERVE_MASTER RM
                                  ON PD.RM_IDX = RM.RM_IDX
                            ) T1
                       --LEFT OUTER JOIN DC_RESERVE_MASTER T2 ON T1.RM_IDX = T2.RM_IDX
                       LEFT OUTER JOIN DC_RENT_COMPANY T3 ON T1.RT_IDX = T3.RT_IDX
                       LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION T4 ON T3.RT_IDX = T4.RT_IDX
                          LEFT OUTER JOIN DC_RENT_ACCOUNTS T5 ON T1.PD_IDX = T5.PD_IDX
                          WHERE #{accountExpDt} = NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6)
                          GROUP BY NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6), T1.RT_IDX
                          ORDER BY NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6) DESC

                     ) Z
                     INNER JOIN DC_RENT_COMPANY B
                        ON Z.RT_IDX = B.RT_IDX
                     LEFT OUTER JOIN DC_COMMON_CODE C
                        ON B.ACCOUNT_BANK = C.CODE
                        AND RT_CODE = 'BK'
               ) A
      ]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="searchType != null and searchType != '' ">
				<choose>
					<when test =' searchType == "CN" '>
						<if test="searchKeyWord != null and searchKeyWord != '' ">
							AND <![CDATA[ A.COMPANY_NAME  LIKE '%' ||  #{searchKeyWord} || '%'  ]]>
						</if>
					</when>
					<when test =' searchType == "RN" '>
						<if test="searchKeyWord != null and searchKeyWord != '' ">
							AND <![CDATA[ A.COMPANY_REGISTRATION_NAME  LIKE '%' ||  #{searchKeyWord} || '%'  ]]>
						</if>
					</when>
				</choose>
			</if>
		</trim>
		<![CDATA[
          ) TTB
         WHERE  1=1
         AND
         ROWNUM <= #{displayPageNum} AND ROW_NUMBER > (#{page}-1) * #{displayPageNum}
         ]]>


	</select>

	<select id="selectCalculateDateReserveList" parameterType="calculateRequest" resultType="calculateResponse">
		SELECT
		DATE_FORMAT(T1.MOD_DT, '%Y-%m-%d') AS ACCOUNT_EXP_DT                        /*정산일*/
		,SUM(T1.RENT_FEE + T1.INSURANCE_FEE + T1.DELIVERY_FEE) AS TOTAL_FEE         /*총금액*/
		,SUM(T1.PAYMENT_TOTAL_AMOUNT) AS PAYMENT_AMOUNT                              /*결제금액*/
		,SUM(T1.DISCOUNT_FEE) AS DISCOUNT_FEE                                        /*할인액*/
		,SUM(T1.PAYMENT_AMOUNT - IFNULL((T1.PAYMENT_AMOUNT * IFNULL(T4.COMMISSION_PER, 15)/100), 0)) AS ESTIMATED_FEE    /*정산예정금액*/
		,IFNULL(SUM(T1.SETTLEMENT_AMOUNT),0) AS SUCCESS_FEE                                  /*정산완료금액*/
		,SUM(T1.PAYMENT_AMOUNT - IFNULL((T1.PAYMENT_AMOUNT * IFNULL(T4.COMMISSION_PER, 15)/100), 0) - IFNULL(T1.SETTLEMENT_AMOUNT,0)) AS ON_MISS_FEE        /*미정산금액*/
		,COUNT(DISTINCT T1.RT_IDX) AS COMPANY_COUNT                               /* 회원사CNT */
		,COUNT(DISTINCT T1.RM_IDX) AS RM_COUNT                                    /* 예약건CNT */
		,SUM(IFNULL((T1.PAYMENT_AMOUNT * IFNULL(T4.COMMISSION_PER, 15)/100), 0)) as DOCHA_DIS_FEE /* 두차수수료 */
		,DATE_FORMAT(T1.SETTLEMENT_DATE, '%Y-%m-%d') AS SETTLEMENT_DATE
		FROM   (
		SELECT
		PD.PAYMENT_AMOUNT
		, PD.PD_IDX
		, PL.SETTLEMENT_AMOUNT
		, PL.SETTLEMENT_DATE
		, RM.*
		, CASE
		WHEN DATE_FORMAT(STR_TO_DATE(PD.PAYMENT_DATE, '%Y-%m-%d'), '%Y-%m-%d') > DATE_FORMAT(RM.RENT_START_DAY, '%Y-%m-%d') THEN DATE_FORMAT(STR_TO_DATE(PD.PAYMENT_DATE, '%Y-%m-%d'), '%Y-%m-%d')
		ELSE DATE_FORMAT(RM.RENT_START_DAY, '%Y-%m-%d')
		END AS ACCOUNT_EXP_BASE_DT
		FROM DC_PAYMENT_DETAIL PD
		INNER JOIN DC_RESERVE_MASTER RM
		ON PD.RM_IDX = RM.RM_IDX
		INNER JOIN DC_PAYMENT_LOG PL
		ON PD.RM_IDX = PL.RM_IDX
		) T1
		LEFT OUTER JOIN DC_RENT_COMPANY T3 ON T1.RT_IDX = T3.RT_IDX
		LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION T4 ON T3.RT_IDX = T4.RT_IDX
		<if test="rtIdx != null and rtIdx != ''">
			<![CDATA[ WHERE T1.RT_IDX = #{rtIdx} ]]>
		</if>
		GROUP BY DATE_FORMAT(T1.MOD_DT, '%Y-%m-%d')

	</select>

	<select id="selectCalculateDateReserveInfo" parameterType="calculateRequest" resultType="calculateResponse">
		SELECT
		DATE_FORMAT(T1.MOD_DT, '%Y-%m-%d') AS ACCOUNT_EXP_DT                        /*정산일*/
		,SUM(T1.RENT_FEE + T1.INSURANCE_FEE + T1.DELIVERY_FEE) AS TOTAL_FEE         /*총금액*/
		,SUM(T1.PAYMENT_TOTAL_AMOUNT) AS PAYMENT_AMOUNT                              /*결제금액*/
		,SUM(T1.DISCOUNT_FEE) AS DISCOUNT_FEE                                         /*할인액*/
		,SUM(T1.PAYMENT_TOTAL_AMOUNT - IFNULL((T1.PAYMENT_TOTAL_AMOUNT * IFNULL(T1.COMMISSION_PER, 15)/100), 0)) AS ESTIMATED_FEE   /*정산예정금액*/
		,IFNULL(SUM(T1.SETTLEMENT_AMOUNT), 0) AS SUCCESS_FEE                                   /*정산완료금액*/
		,SUM(T1.PAYMENT_AMOUNT - IFNULL((T1.PAYMENT_AMOUNT * IFNULL(T1.COMMISSION_PER, 15)/100), 0) - IFNULL(T1.SETTLEMENT_AMOUNT,0)) AS ON_MISS_FEE        /*미정산금액*/
		,COUNT(DISTINCT T1.RM_IDX) AS RM_COUNT
		,IFNULL((SUM(T1.PAYMENT_TOTAL_AMOUNT * IFNULL(T1.COMMISSION_PER, 15)/100)), 0) as DOCHA_DIS_FEE /* 두차수수료 */
		,T1.RT_IDX
		,T1.COMPANY_NAME
		,T1.BRANCH_NAME
		,T1.COMPANY_REGISTRATION_NAME
		,T1.ACCOUNT_BANK
		,T1.ACCOUNT_NUMBER
		,T1.RM_IDX
		,DATE_FORMAT(T1.SETTLEMENT_DATE, '%Y-%m-%d') AS SETTLEMENT_DATE
		FROM   (
		SELECT PD.*
		,RCC.COMMISSION_PER
		,RM.MOD_DT
		,RM.RENT_FEE
		,RM.PAYMENT_TOTAL_AMOUNT
		,RM.INSURANCE_FEE
		,RM.DELIVERY_FEE
		,RM.DISCOUNT_FEE
		,RM.BALANCE
		,RM.SUM_PAYMENT_AMOUNT
		,RC.RT_IDX
		,RC.COMPANY_NAME
		,RC.BRANCH_NAME
		,RC.COMPANY_REGISTRATION_NAME
		,RC.ACCOUNT_BANK
		,RC.ACCOUNT_NUMBER
		,PL.SETTLEMENT_AMOUNT
		,PL.SETTLEMENT_DATE
		FROM DC_PAYMENT_DETAIL PD
		INNER JOIN DC_RESERVE_MASTER RM
		ON PD.RM_IDX = RM.RM_IDX
		INNER JOIN DC_RENT_COMPANY RC
		ON RM.RT_IDX = RC.RT_IDX
		LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION RCC
		ON RCC.RT_IDX = RC.RT_IDX
		INNER JOIN DC_PAYMENT_LOG PL
		ON PD.RM_IDX = PL.RM_IDX
		) T1
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="rtIdx != null and rtIdx != ''">
				<![CDATA[ AND T1.RT_IDX = #{rtIdx} ]]>
			</if>
			<if test="accountExpDt != null and accountExpDt != ''">
				<![CDATA[ AND DATE_FORMAT(T1.MOD_DT, '%Y-%m-%d') = DATE_FORMAT(#{accountExpDt}, '%Y-%m-%d')]]>
			</if>
		</trim>
		GROUP BY RT_IDX
	</select>

	<select id="selectCalculateDateRentCompanyReserveInfo" parameterType="calculateRequest" resultType="calculateResponse">
		SELECT
		DATE_FORMAT(T1.MOD_DT, '%Y-%m-%d') AS ACCOUNT_EXP_DT                        /*정산일*/
		,T1.RENT_FEE + T1.INSURANCE_FEE + T1.DELIVERY_FEE AS TOTAL_FEE         /*총금액*/
		,T1.PAYMENT_TOTAL_AMOUNT AS PAYMENT_AMOUNT                              /*결제금액*/
		,T1.DISCOUNT_FEE AS DISCOUNT_FEE                                        /*할인액*/
		,T1.PAYMENT_TOTAL_AMOUNT - IFNULL((T1.PAYMENT_TOTAL_AMOUNT * IFNULL(T1.COMMISSION_PER, 15)/100), 0) AS ESTIMATED_FEE  /*정산예정금액*/
		,IFNULL(T1.SETTLEMENT_AMOUNT, 0) AS SUCCESS_FEE                                   									   /*정산완료금액*/
		,T1.PAYMENT_AMOUNT - IFNULL((T1.PAYMENT_AMOUNT * IFNULL(T1.COMMISSION_PER, 15)/100), 0) - IFNULL(T1.SETTLEMENT_AMOUNT,0) AS ON_MISS_FEE        /*미정산금액*/
		,T1.COMPANY_NAME
		,T1.BRANCH_NAME
		,T1.COMPANY_REGISTRATION_NAME
		,T1.RENT_START_DAY
		,T1.RENT_END_DAY
		,T1.RM_IDX
		,T1.MODEL_NAME
		,T1.MODEL_DETAIL_NAME
		,T1.CAR_NUMBER
		,IFNULL((T1.PAYMENT_TOTAL_AMOUNT * IFNULL(T1.COMMISSION_PER, 15)/100), 0) as DOCHA_DIS_FEE /* 두차수수료 */
		,T1.SETTLEMENT_AMOUNT
		,DATE_FORMAT(T1.SETTLEMENT_DATE, '%Y-%m-%d') AS SETTLEMENT_DATE
		FROM   (
		SELECT PD.*
		,CI.MODEL_NAME
		,CI.MODEL_DETAIL_NAME
		,CI.CAR_NUMBER
		,RM.MOD_DT
		,RM.RENT_FEE
		,RM.PAYMENT_TOTAL_AMOUNT
		,RM.INSURANCE_FEE
		,RM.DELIVERY_FEE
		,RM.DISCOUNT_FEE
		,RM.BALANCE
		,RM.SUM_PAYMENT_AMOUNT
		,RM.RENT_START_DAY
		,RM.RENT_END_DAY
		,RC.RT_IDX
		,RC.COMPANY_NAME
		,RC.BRANCH_NAME
		,RC.COMPANY_REGISTRATION_NAME
		,RCC.COMMISSION_PER
		,PL.SETTLEMENT_AMOUNT
		,PL.SETTLEMENT_DATE
		FROM DC_PAYMENT_DETAIL PD
		INNER JOIN DC_RESERVE_MASTER RM
		ON PD.RM_IDX = RM.RM_IDX
		INNER JOIN DC_RENT_COMPANY RC
		ON RM.RT_IDX = RC.RT_IDX
		INNER JOIN DC_CAR_INFO CI
		ON RM.CR_IDX = CI.CR_IDX
		LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION RCC
		ON RCC.RT_IDX = RC.RT_IDX
		LEFT OUTER JOIN DC_PAYMENT_LOG PL
		ON PD.RM_IDX = PL.RM_IDX
		) T1
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="accountExpDt != null and accountExpDt != ''">
				<![CDATA[ AND DATE_FORMAT(T1.MOD_DT, '%Y-%m-%d') = DATE_FORMAT(#{accountExpDt}, '%Y-%m-%d') ]]>
			</if>
			<if test="rtIdx != null and rtIdx != ''">
				<![CDATA[ AND T1.RT_IDX = #{rtIdx} ]]>
			</if>
		</trim>
	</select>

	<select id="selectCalculateAccountsExpectedInfo" parameterType="calculateRequest" resultType="calculateResponse">
		SELECT
		T1.*
		, TO_CHAR(NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6), 'YYYY-MM-DD') AS ACCOUNT_EXP_DT
		, IFNULL((T1.PAYMENT_AMOUNT ), 0) - IFNULL((T1.PAYMENT_AMOUNT*DECODE(T2.COMMISSION_PER, 0,NULL, T2.COMMISSION_PER)/100), 0) AS ACCOUNT_EXP_AMT
		FROM   (
		SELECT
		PD.PAYMENT_AMOUNT
		, PD.PD_IDX
		, RM.RT_IDX
		, RM.RM_IDX
		, RM.DISCOUNT_FEE
		, CASE
		WHEN TO_DATE(TO_CHAR(PD.PAYMENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') > TO_DATE(RM.RENT_START_DAY, 'YYYY-MM-DD') THEN TO_DATE(TO_CHAR(PD.PAYMENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		ELSE TO_DATE(RM.RENT_START_DAY, 'YYYY-MM-DD')
		END AS ACCOUNT_EXP_BASE_DT
		FROM DC_PAYMENT_DETAIL PD
		INNER JOIN DC_RESERVE_MASTER RM
		ON PD.RM_IDX = RM.RM_IDX
		) T1
		LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION T2 ON T1.RT_IDX = T2.RT_IDX
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			AND NOT EXISTS ( SELECT * FROM DC_RENT_ACCOUNTS T2 WHERE T1.PD_IDX = T2.PD_IDX )
			<if test="accountExpDt != null and accountExpDt != ''">
				AND #{accountExpDt} = NEXT_DAY(TO_DATE(T1.ACCOUNT_EXP_BASE_DT), 6)
			</if>
			<if test="rmIdx != null and rmIdx != ''">
				AND T1.RM_IDX = #{rmIdx}
			</if>
			<if test="rtIdx != null and rtIdx != ''">
				AND T1.RT_IDX = #{rtIdx}
			</if>
		</trim>
	</select>

	<insert id="insertRentAccounts" parameterType="calculateRequest">
       INSERT INTO DC_RENT_ACCOUNTS(
         AC_DT
         , RT_IDX
         , RM_IDX
         , PD_IDX
         , AC_PAY
         , REG_ID
         , REG_DT
         , MOD_ID
         , MOD_DT
       )VALUES (
          #{acDt}
          , #{rtIdx}
          , #{rmIdx}
          , #{pdIdx}
              , #{acPay}
              , #{regId}
              , SYSTIMESTAMP
              , #{modId}
             , SYSTIMESTAMP
      )
    </insert>

	<select id="selectRentCompanySettlementInfo" parameterType="calculateRequest" resultType="calculateResponse">
		SELECT
		PL.RM_IDX
		,PL.PAYMENT_DATE
		,RM.PAYMENT_TOTAL_AMOUNT - IFNULL((RM.PAYMENT_TOTAL_AMOUNT * IFNULL(RCC.COMMISSION_PER, 15)/100), 0) - IFNULL(PL.SETTLEMENT_AMOUNT,0) AS ON_MISS_FEE        /*미정산금액*/
		,IFNULL(PL.SETTLEMENT_AMOUNT, 0) AS SETTLEMENT_AMOUNT
		FROM DC_PAYMENT_LOG PL
			INNER JOIN DC_RESERVE_MASTER RM
			ON PL.RM_IDX = RM.RM_IDX
			LEFT OUTER JOIN DC_RENT_COMPANY_COMMISSION RCC
			ON RM.RT_IDX = RCC.RT_IDX
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="rtIdx != null and rtIdx != ''">
				<![CDATA[ AND RM.RT_IDX = #{rtIdx} ]]>
			</if>
			<if test="reserveDate != null and reserveDate != ''">
				<![CDATA[ AND DATE_FORMAT(RM.RESERVE_DATE, '%Y-%m-%d') = #{reserveDate} ]]>
			</if>
		</trim>
		ORDER BY PL.PAYMENT_DATE
	</select>

	<select id="selectSettlementAmount" parameterType="calculateRequest" resultType="calculateResponse">
		SELECT
		RM_IDX
		,SETTLEMENT_AMOUNT
		FROM DC_PAYMENT_LOG
		<trim prefix="WHERE">
			<if test="rmIdx != null and rmIdx != ''">
				<![CDATA[ RM_IDX = #{rmIdx} ]]>
			</if>
		</trim>
	</select>

	<update id="updateSettlementAmount" parameterType="calculateRequest">
		<![CDATA[ UPDATE DC_PAYMENT_LOG ]]>
		<trim prefix="SET" suffixOverrides=",">
			<if test="settlementAmount	!= null"><![CDATA[   SETTLEMENT_AMOUNT = #{settlementAmount} ]]></if>
			, SETTLEMENT_DATE = NOW()
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="rmIdx != null and rmIdx != ''">
				<![CDATA[ RM_IDX = #{rmIdx} ]]>
			</if>
		</trim>
    </update>

</mapper>









